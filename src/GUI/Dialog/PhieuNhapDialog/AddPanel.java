/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.Dialog.PhieuNhapDialog;

import BUS.NhaCungCapBUS;
import BUS.NhanVienBUS;
import BUS.PhieuNhapBUS;
import BUS.SachBUS;
import BUS.TacGiaBUS;
import DTO.ChiTietPhieuNhapDTO;
import DTO.PhieuNhapDTO;
import DTO.SachDTO;
import DTO.TacGiaDTO;
import GUI.Format.NumberFormatter;
import GUI.WorkFrame;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Minnie
 */
public class AddPanel extends JPanel{
    private NhaCungCapBUS nccBUS = new NhaCungCapBUS();
    private SachBUS sachBUS = new SachBUS();
    private NhanVienBUS nvBUS = new NhanVienBUS();
    private TacGiaBUS tacgiaBUS = new TacGiaBUS();
    private DefaultTableModel dataBook;
    private ArrayList<SachDTO> listSach;
    private JTable tableChonSach;
    /**
     */
   
    
    public AddPanel() {
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txfFind = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        lbMaSach = new javax.swing.JLabel();
        lbTenSach = new javax.swing.JLabel();
        txfMaSach = new javax.swing.JTextField();
        txfTenSach = new javax.swing.JTextField();
        lbGiaNhap = new javax.swing.JLabel();
        txfGiaNhap = new javax.swing.JTextField();
        lbSoLuong = new javax.swing.JLabel();
        txfSoLuong = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbMaPhieuNhap = new javax.swing.JLabel();
        txfMaPhieuNhap = new javax.swing.JTextField();
        txfNhanVien = new javax.swing.JTextField();
        lbNhanVienNhap = new javax.swing.JLabel();
        lbNCC = new javax.swing.JLabel();
        lbTongTien = new javax.swing.JLabel();
        btnNhap = new javax.swing.JButton();
        lbThanhTien = new javax.swing.JLabel();
        cbboxNCC = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        SPSachThem = new javax.swing.JScrollPane();
        tableListThem = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        txfFind.setBackground(new java.awt.Color(255, 255, 255));
        txfFind.setForeground(new java.awt.Color(153, 153, 153));
        txfFind.setText("Tìm kiếm sản phẩm....");
        txfFind.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txfFindFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txfFindFocusLost(evt);
                
            }
        });
        txfFind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txfFindMouseClicked(evt);
            }
        });
        txfFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfFindActionPerformed(evt);
            }
        });
        txfFind.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
        @Override
        public void insertUpdate(javax.swing.event.DocumentEvent e) {
            filterTable();
        }

        @Override
        public void removeUpdate(javax.swing.event.DocumentEvent e) {
            filterTable();
        }

        @Override
        public void changedUpdate(javax.swing.event.DocumentEvent e) {
            filterTable();
        }
    });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable3);
        

        String[] columnBook = {"Mã sách", "Tên sách", "Tên tác giả", "Số lượng tồn"};
        dataBook = new DefaultTableModel(columnBook, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Disable editing
            }
        };
        jTable4.setModel(dataBook);
        jTable4.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Chỉ cho phép chọn một hàng
        listSach = new SachBUS().getSachAll();
        tacgiaBUS = new TacGiaBUS();
        tableChonSach = new JTable(dataBook);
        for(SachDTO sach : listSach){
            String TG = "";
            TacGiaDTO tg = tacgiaBUS.getTGById(sach.getMatacgia());
            TG = tg.getHotentacgia();
            dataBook.addRow(new Object[]{
                sach.getMasach(),
                sach.getTensach(),
                TG,
                NumberFormatter.format(sach.getSoluongton())
            });
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        int[] columnIndices = {0, 1, 2, 3};
        for (int index : columnIndices) {
            tableChonSach.getColumnModel().getColumn(index).setCellRenderer(centerRenderer);
        }
        tableChonSach.setRowHeight(50);
        tableChonSach.setShowGrid(true);
        tableChonSach.setGridColor(Color.LIGHT_GRAY);
        tableChonSach.setSelectionBackground(new Color(204, 204, 204));
        tableChonSach.setSelectionForeground(Color.BLACK);
        tableChonSach.setBackground(Color.WHITE);
        tableChonSach.setForeground(Color.BLACK);
        tableChonSach.getColumnModel().getColumn(0).setPreferredWidth(35);
        tableChonSach.getColumnModel().getColumn(1).setPreferredWidth(200);
        tableChonSach.getColumnModel().getColumn(2).setPreferredWidth(150);
        tableChonSach.getColumnModel().getColumn(3).setPreferredWidth(70);
        jScrollPane3.setViewportView(tableChonSach);
        
        
        jScrollPane3.setViewportView(jTable4);

        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setResizable(false);
            jTable4.getColumnModel().getColumn(1).setResizable(false);
            jTable4.getColumnModel().getColumn(2).setResizable(false);
            jTable4.getColumnModel().getColumn(3).setResizable(false);
        }
        jTable4.setRowHeight(35);

        jTable4.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting() && jTable4.getSelectedRow() != -1) {
                System.out.println("01");
                int selectedRow = jTable4.getSelectedRow();
                String maSach = jTable4.getValueAt(selectedRow, 0).toString();
                String tenSach = jTable4.getValueAt(selectedRow, 1).toString();
                String soLuongTon = jTable4.getValueAt(selectedRow, 3).toString();

                // Populate the text fields with the selected row data
                txfTenSach.setEditable(false);
                txfTenSach.setToolTipText("");
                txfTenSach.setText(tenSach);
                txfMaSach.setEditable(false);
                txfMaSach.setToolTipText("");
                txfMaSach.setText(maSach);
                txfGiaNhap.setEditable(false);
                txfGiaNhap.setToolTipText("");
                txfGiaNhap.setText(sachBUS.getDongGiaById(maSach) + "");
                txfSoLuong.setText("");

                tableListThem.clearSelection();
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfFind)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfFind, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        txfFind.getAccessibleContext().setAccessibleName("");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        lbMaSach.setForeground(new java.awt.Color(0, 0, 0));
        lbMaSach.setText("Mã sách:");

        lbTenSach.setForeground(new java.awt.Color(0, 0, 0));
        lbTenSach.setText("Tên sách:");

        txfMaSach.setBackground(new java.awt.Color(204, 204, 204));
        txfMaSach.setForeground(new java.awt.Color(0, 0, 0));
        txfMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfMaSachActionPerformed(evt);
            }
        });

        txfTenSach.setBackground(new java.awt.Color(204, 204, 204));
        txfTenSach.setForeground(new java.awt.Color(0, 0, 0));

        lbGiaNhap.setForeground(new java.awt.Color(0, 0, 0));
        lbGiaNhap.setText("Giá nhập");

        txfGiaNhap.setBackground(new java.awt.Color(204, 204, 204));
        txfGiaNhap.setForeground(new java.awt.Color(0, 0, 0));

        lbSoLuong.setForeground(new java.awt.Color(0, 0, 0));
        lbSoLuong.setText("Số lượng:");

        txfSoLuong.setBackground(new java.awt.Color(255, 255, 255));
        txfSoLuong.setForeground(new java.awt.Color(0, 0, 0));

        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setActionCommand("btnSua");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa.setText("Bỏ chọn");
        btnXoa.setActionCommand("btnXoa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfSoLuong)
                    .addComponent(txfTenSach)
                    .addComponent(lbTenSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txfMaSach)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSoLuong)
                            .addComponent(lbMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txfGiaNhap))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbGiaNhap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbSoLuong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setActionCommand("btnThem");
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))))
        );
        jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 0, Short.MAX_VALUE)) // Khoảng cách 200 đơn vị
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lbMaPhieuNhap.setForeground(new java.awt.Color(0, 0, 0));
        lbMaPhieuNhap.setText("Mã phiếu nhập:");

        txfMaPhieuNhap.setBackground(new java.awt.Color(204, 204, 204));
        txfMaPhieuNhap.setForeground(new java.awt.Color(0, 0, 0));
        txfMaPhieuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfMaPhieuNhapActionPerformed(evt);
            }
        });
        txfMaPhieuNhap.setEditable(false);
        txfMaPhieuNhap.setToolTipText("");
        int lastMaPhieuNhap = new PhieuNhapBUS().getLastMaPhieuNhap(); // Assuming this method retrieves the last MaPhieuNhap from the database
        txfMaPhieuNhap.setText(String.valueOf(lastMaPhieuNhap + 1));

        txfNhanVien.setBackground(new java.awt.Color(204, 204, 204));
        txfNhanVien.setForeground(new java.awt.Color(0, 0, 0));

        lbNhanVienNhap.setBackground(new java.awt.Color(204, 204, 204));
        lbNhanVienNhap.setForeground(new java.awt.Color(0, 0, 0));
        lbNhanVienNhap.setText("Nhân viên nhập:");

        txfNhanVien.setEditable(false);
        txfNhanVien.setToolTipText("");
        txfNhanVien.setText(nvBUS.getHoTenNVById(WorkFrame.taiKhoan.getManv()));

        lbNCC.setForeground(new java.awt.Color(0, 0, 0));
        lbNCC.setText("Nhà cung cấp:");

        lbTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbTongTien.setForeground(new java.awt.Color(255, 51, 51));
        lbTongTien.setText("TỔNG TIỀN:");

        btnNhap.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNhap.setActionCommand("btnNhap");
        btnNhap.setText("NHẬP HÀNG");
        btnNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapActionPerformed(evt);
            }
        });

        lbThanhTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbThanhTien.setForeground(new java.awt.Color(0, 0, 0));
        lbThanhTien.setText("0đ");

        cbboxNCC.setBackground(new java.awt.Color(255, 255, 255));
        ArrayList<String> listNCC = new ArrayList<>();
        // Assuming you have a method in your business layer to fetch supplier names
        listNCC = new NhaCungCapBUS().getAllTenNCC(); 
        cbboxNCC.setModel(new javax.swing.DefaultComboBoxModel<>(listNCC.toArray(new String[0])));
        cbboxNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbboxNCCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cbboxNCC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfMaPhieuNhap)
                            .addComponent(txfNhanVien)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbNhanVienNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbMaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbTongTien)
                                .addGap(18, 18, 18)
                                .addComponent(lbThanhTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfMaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbNhanVienNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbboxNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNhap)
                .addGap(100, 100, 100))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        SPSachThem.setPreferredSize(new Dimension(SPSachThem.getWidth(), 300)); // Giảm chiều cao tổng thể
        SPSachThem.setBackground(new java.awt.Color(255, 255, 255));

        String[] columnListThem = {"STT","Mã sách", "Tên sách", "Số lượng nhập", "Thành tiền"};
        DefaultTableModel dataListThem = new DefaultTableModel(columnListThem, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Disable editing
            }
        };
        tableListThem = new JTable(dataListThem);
        tableListThem.setRowHeight(30);
        tableListThem.getColumnModel().getColumn(0).setPreferredWidth(35);
        tableListThem.getColumnModel().getColumn(1).setPreferredWidth(35);
        tableListThem.getColumnModel().getColumn(2).setPreferredWidth(200);
        tableListThem.getColumnModel().getColumn(3).setPreferredWidth(70);
        tableListThem.getColumnModel().getColumn(4).setPreferredWidth(70);
        tableListThem.setShowGrid(true);
        DefaultTableCellRenderer centerRenderer2 = new DefaultTableCellRenderer();
        centerRenderer2.setHorizontalAlignment(JLabel.CENTER);
        int[] columnIndicesListThem = {0, 1, 2, 3, 4};
        for (int index : columnIndicesListThem) {
            tableListThem.getColumnModel().getColumn(index).setCellRenderer(centerRenderer2);
        }
        tableListThem.getTableHeader().setReorderingAllowed(false);
        tableListThem.getTableHeader().setBackground(new Color(204, 204, 204));
        tableListThem.getTableHeader().setForeground(Color.BLACK);
        tableListThem.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Chỉ cho phép chọn một hàng
        tableListThem.setRowSelectionAllowed(true); // Cho phép chọn hàng
        tableListThem.setColumnSelectionAllowed(false); // Không cho phép chọn cột

        SPSachThem.setViewportView(tableListThem);
        if (tableListThem.getColumnModel().getColumnCount() > 0) {
            tableListThem.getColumnModel().getColumn(0).setResizable(false);
            tableListThem.getColumnModel().getColumn(1).setResizable(false);
            tableListThem.getColumnModel().getColumn(2).setResizable(false);
            tableListThem.getColumnModel().getColumn(3).setResizable(false);
            tableListThem.getColumnModel().getColumn(4).setResizable(false);
        }

        tableListThem.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting() && tableListThem.getSelectedRow() != -1) {
                System.out.println("Ban da chon hang tai tableListThem");
                int selectedRow = tableListThem.getSelectedRow();
                System.out.println("Hàng được chọn: " + selectedRow);

                String maSach = tableListThem.getValueAt(selectedRow, 1).toString();
                String tenSach = tableListThem.getValueAt(selectedRow, 2).toString();
                String giaNhap = sachBUS.getDongGiaById(maSach) + "";
                String soLuongNhap = tableListThem.getValueAt(selectedRow, 3).toString();

                txfTenSach.setText(tenSach);
                txfMaSach.setText(maSach);
                txfGiaNhap.setText(giaNhap);
                txfSoLuong.setText(soLuongNhap);

                // Hiển thị dữ liệu lên các trường thông tin
                txfTenSach.setEditable(false);
                txfTenSach.setToolTipText("");
                txfTenSach.setText(tenSach);
                txfMaSach.setEditable(false);
                txfMaSach.setToolTipText("");
                txfMaSach.setText(maSach);
                txfGiaNhap.setEditable(false);
                txfGiaNhap.setToolTipText("");
                txfGiaNhap.setText(giaNhap);

                // Bỏ chọn select 
                jTable4.clearSelection();
            }
        });


        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SPSachThem)
        );
        jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(SPSachThem, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)) // Tăng khoảng cách 20 pixel
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void txfMaPhieuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfMaPhieuNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfMaPhieuNhapActionPerformed

    private void cbboxNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbboxNCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbboxNCCActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
            // Lấy hàng được chọn trong jTable4
            int selectedRow = jTable4.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một sách để thêm!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Lấy dữ liệu từ hàng được chọn
            String maSach = jTable4.getValueAt(selectedRow, 0).toString();
            String tenSach = jTable4.getValueAt(selectedRow, 1).toString();
            String soLuongTon = jTable4.getValueAt(selectedRow, 3).toString();

            // Kiểm tra số lượng nhập
            String soLuongNhapStr = txfSoLuong.getText().trim();
            if (soLuongNhapStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int soLuongNhap;
            try {
                soLuongNhap = Integer.parseInt(soLuongNhapStr);
                if (soLuongNhap <= 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng nhập phải lớn hơn 0!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Số lượng nhập không hợp lệ!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Kiểm tra số lượng tồn
            int soLuongTonInt = Integer.parseInt(soLuongTon.replace(",", ""));
            if (soLuongNhap > soLuongTonInt) {
                JOptionPane.showMessageDialog(this, "Số lượng nhập không được vượt quá số lượng tồn!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // Tính thành tiền
            int giaNhap = Integer.parseInt(txfGiaNhap.getText().trim());
            int thanhTien = soLuongNhap * giaNhap;

            // Thêm dữ liệu vào tableListThem
            DefaultTableModel model = (DefaultTableModel) tableListThem.getModel();
            model.addRow(new Object[]{
                model.getRowCount() + 1, // STT
                maSach,                 // Mã sách
                tenSach,                 // Tên sách
                soLuongNhap,             // Số lượng nhập
                thanhTien                // Thành tiền
            });
            
            // Cập nhật tổng tiền
            int tongTien = 0;
            for (int i = 0; i < model.getRowCount(); i++) {
                tongTien += Integer.parseInt(model.getValueAt(i, 4).toString());
            }
            lbThanhTien.setText(tongTien + "đ");

            // Xóa dữ liệu trong các trường nhập
            txfSoLuong.setText("");
            txfMaSach.setText("");
            txfTenSach.setText("");
            txfGiaNhap.setText("");

            //Bỏ chọn hàng
            jTable4.clearSelection();
        }                                       

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        // Xóa dữ liệu trong các trường nhập
                txfSoLuong.setText("");
                txfMaSach.setText("");
                txfTenSach.setText("");
                txfGiaNhap.setText("");

                //Bỏ chọn hàng
                jTable4.clearSelection();
                tableListThem.clearSelection();

                refreshJTable4();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
// Lấy hàng được chọn trong tableListThem
            int selectedRow = tableListThem.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một hàng trong bảng để sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Kiểm tra các trường nhập liệu
            String maSach = txfMaSach.getText().trim();
            String tenSach = txfTenSach.getText().trim();
            String giaNhapStr = txfGiaNhap.getText().trim();
            String soLuongNhapStr = txfSoLuong.getText().trim();

            if (maSach.isEmpty() || tenSach.isEmpty() || giaNhapStr.isEmpty() || soLuongNhapStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin trước khi sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int soLuongNhap;
            try {
                soLuongNhap = Integer.parseInt(soLuongNhapStr);

                if (soLuongNhap <= 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng nhập phải lớn hơn 0!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Số lượng nhập không hợp lệ!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Tính lại thành tiền
            int thanhTien = Integer.parseInt(giaNhapStr) * soLuongNhap;

            // Cập nhật dữ liệu trong tableListThem
            DefaultTableModel model = (DefaultTableModel) tableListThem.getModel();
            model.setValueAt(maSach, selectedRow, 1); // Cập nhật mã sách
            model.setValueAt(tenSach, selectedRow, 2); // Cập nhật tên sách
            model.setValueAt(soLuongNhap, selectedRow, 3); // Cập nhật số lượng nhập
            model.setValueAt(thanhTien, selectedRow, 4); // Cập nhật thành tiền

            // Cập nhật tổng tiền
            int tongTien = 0;
            for (int i = 0; i < model.getRowCount(); i++) {
                tongTien += Integer.parseInt(model.getValueAt(i, 4).toString());
            }
            lbThanhTien.setText(tongTien + "đ");

            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Xóa dữ liệu trong các trường nhập
            txfSoLuong.setText("");
            txfMaSach.setText("");
            txfTenSach.setText("");
            txfGiaNhap.setText("");

            // Bỏ chọn hàng
            tableListThem.clearSelection();
            jTable4.clearSelection();                 

            refreshJTable4();            
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnNhapActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        System.err.println("dang nhan btn Nhap");
            // Kiểm tra nếu bảng tableListThem không có dữ liệu
        DefaultTableModel model = (DefaultTableModel) tableListThem.getModel();
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Không có sản phẩm nào để nhập!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Kiểm tra thông tin phiếu nhập
        String maPhieuNhap = txfMaPhieuNhap.getText().trim();
        String nhanVienNhap = txfNhanVien.getText().trim();
        String nhaCungCap = cbboxNCC.getSelectedItem().toString();

        if (maPhieuNhap.isEmpty() || nhanVienNhap.isEmpty() || nhaCungCap.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin phiếu nhập!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Hiển thị xác nhận trước khi nhập
        int confirm = JOptionPane.showConfirmDialog(this, 
            "Bạn có chắc chắn muốn nhập hàng?", 
            "Xác nhận nhập hàng", 
            JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Gọi đến PhieuNhapDialogAdd để xử lý đẩy dữ liệu lên database
        try {
            PhieuNhapBUS phieuNhapBUS = new PhieuNhapBUS();
            //Tạo dữ liệu cho Phiếu Nhập DTO
                int maphieu = Integer.parseInt(txfMaPhieuNhap.getText().trim());
                int manv = WorkFrame.taiKhoan.getManv();
                int mancc = nccBUS.getMaNccByNameNCC(nhaCungCap);
                java.sql.Timestamp thoigiantao = new java.sql.Timestamp(System.currentTimeMillis());

                int tongTien = Integer.parseInt(lbThanhTien.getText().replace("đ", "").trim());
                int trangthai = 1;

                PhieuNhapDTO pnNew = new PhieuNhapDTO(maphieu, manv, mancc, thoigiantao, tongTien, trangthai);

            //Tạo dữ liệu cho list_ctpn
                ArrayList<ChiTietPhieuNhapDTO> list_ctpn = new ArrayList<>();
                for (int i = 0; i < model.getRowCount(); i++) {
                    String maSachCTPN = model.getValueAt(i, 1).toString();
                    int soLuongNhapCTPN = Integer.parseInt(model.getValueAt(i, 3).toString());
                    int donGiaCTPN = sachBUS.getDongGiaById(maSachCTPN);
                    ChiTietPhieuNhapDTO ctpn = new ChiTietPhieuNhapDTO(maphieu, maSachCTPN, soLuongNhapCTPN, donGiaCTPN);
                    list_ctpn.add(ctpn);
                }
                phieuNhapBUS.insert(pnNew, list_ctpn);
                boolean success = true; 
                if (success) {
                    JOptionPane.showMessageDialog(this, "Nhập hàng thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                    // Xóa dữ liệu trong bảng và các trường nhập
                    model.setRowCount(0);
                    txfMaPhieuNhap.setText(String.valueOf(Integer.parseInt(maPhieuNhap) + 1)); // Tăng mã phiếu nhập
                    lbThanhTien.setText("0đ");
                    refreshJTable4();
                } else {
                    JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi nhập hàng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } 

    private void txfMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfMaSachActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txfMaSachActionPerformed

    private void txfFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfFindActionPerformed

    private void txfFindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txfFindMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_txfFindMouseClicked

    private void txfFindFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfFindFocusLost
        // TODO add your handling code here:
        if(txfFind.getText().trim().isEmpty()){
            txfFind.setText("Tìm kiếm sản phẩm...");
            txfFind.setForeground(Color.lightGray);

            refreshJTable4();
        }
    }//GEN-LAST:event_txfFindFocusLost

    private void txfFindFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfFindFocusGained
        // TODO add your handling code here:
        txfFind.setText("");
        txfFind.setForeground(Color.BLACK);
    }//GEN-LAST:event_txfFindFocusGained
    
    private void refreshJTable4() {
        // Xóa dữ liệu hiện tại trong bảng
        dataBook.setRowCount(0);

        // Lấy dữ liệu mới từ cơ sở dữ liệu
        listSach = sachBUS.getSachAll();

        // Thêm dữ liệu mới vào bảng
        for (SachDTO sach : listSach) {
            String tacGia = "";
            TacGiaDTO tg = tacgiaBUS.getTGById(sach.getMatacgia());
            if (tg != null) {
                tacGia = tg.getHotentacgia();
            }
            dataBook.addRow(new Object[]{
                sach.getMasach(),
                sach.getTensach(),
                tacGia,
                NumberFormatter.format(sach.getSoluongton())
            });
        }

        // Thông báo cho mô hình bảng rằng dữ liệu đã thay đổi
        dataBook.fireTableDataChanged();

        // Đặt lại mô hình cho jTable4 (nếu cần)
        jTable4.setModel(dataBook);

        // Cập nhật giao diện
        jTable4.revalidate();
        jTable4.repaint();
    }
    
    private void filterTable() {
    String keyword = txfFind.getText().trim().toLowerCase();

    // Xóa dữ liệu hiện tại trong bảng
    dataBook.setRowCount(0);

        // Lọc dữ liệu từ danh sách sách
        for (SachDTO sach : listSach) {
            String maSach = sach.getMasach().toLowerCase();
            String tenSach = sach.getTensach().toLowerCase();

            // Kiểm tra nếu mã sách hoặc tên sách chứa từ khóa
            if (maSach.contains(keyword) || tenSach.contains(keyword)) {
                String tacGia = "";
                TacGiaDTO tg = tacgiaBUS.getTGById(sach.getMatacgia());
                if (tg != null) {
                    tacGia = tg.getHotentacgia();
                }
                dataBook.addRow(new Object[]{
                    sach.getMasach(),
                    sach.getTensach(),
                    tacGia,
                    NumberFormatter.format(sach.getSoluongton())
                });
            }
        }
    

    // Đặt lại trạng thái chọn hàng
    jTable4.clearSelection();

    // Cập nhật giao diện bảng
    jTable4.revalidate();
    jTable4.repaint();
    }

    private String giaTienString(int n){
        return String.format("%,d", n).replace(",", " ");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane SPSachThem;
    private javax.swing.JButton btnNhap;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbboxNCC;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JLabel lbGiaNhap;
    private javax.swing.JLabel lbMaPhieuNhap;
    private javax.swing.JLabel lbMaSach;
    private javax.swing.JLabel lbNCC;
    private javax.swing.JLabel lbNhanVienNhap;
    private javax.swing.JLabel lbSoLuong;
    private javax.swing.JLabel lbTenSach;
    private javax.swing.JLabel lbThanhTien;
    private javax.swing.JLabel lbTongTien;
    private javax.swing.JTable tableListThem;
    private javax.swing.JTextField txfFind;
    private javax.swing.JTextField txfGiaNhap;
    private javax.swing.JTextField txfMaPhieuNhap;
    private javax.swing.JTextField txfMaSach;
    private javax.swing.JTextField txfNhanVien;
    private javax.swing.JTextField txfSoLuong;
    private javax.swing.JTextField txfTenSach;
    // End of variables declaration//GEN-END:variables

    public SachBUS getSachBUS() {
        return sachBUS;
    }

    public void setSachBUS(SachBUS sachBUS) {
        this.sachBUS = sachBUS;
    }

    public TacGiaBUS getTacgiaBUS() {
        return tacgiaBUS;
    }

    public void setTacgiaBUS(TacGiaBUS tacgiaBUS) {
        this.tacgiaBUS = tacgiaBUS;
    }

    public DefaultTableModel getDataBook() {
        return dataBook;
    }

    public void setDataBook(DefaultTableModel dataBook) {
        this.dataBook = dataBook;
    }

    public ArrayList<SachDTO> getListSach() {
        return listSach;
    }

    public void setListSach(ArrayList<SachDTO> listSach) {
        this.listSach = listSach;
    }

    public JTable getTableChonSach() {
        return tableChonSach;
    }

    public void setTableChonSach(JTable tableChonSach) {
        this.tableChonSach = tableChonSach;
    }

    public JScrollPane getSPSachThem() {
        return SPSachThem;
    }

    public void setSPSachThem(JScrollPane SPSachThem) {
        this.SPSachThem = SPSachThem;
    }

    public JButton getBtnNhap() {
        return btnNhap;
    }

    public void setBtnNhap(JButton btnNhap) {
        this.btnNhap = btnNhap;
    }

    public JButton getBtnSua() {
        return btnSua;
    }

    public void setBtnSua(JButton btnSua) {
        this.btnSua = btnSua;
    }

    public JButton getBtnThem() {
        return btnThem;
    }

    public void setBtnThem(JButton btnThem) {
        this.btnThem = btnThem;
    }

    public JButton getBtnXoa() {
        return btnXoa;
    }

    public void setBtnXoa(JButton btnXoa) {
        this.btnXoa = btnXoa;
    }

    public JComboBox<String> getCbboxNCC() {
        return cbboxNCC;
    }

    public void setCbboxNCC(JComboBox<String> cbboxNCC) {
        this.cbboxNCC = cbboxNCC;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JPanel getjPanel2() {
        return jPanel2;
    }

    public void setjPanel2(JPanel jPanel2) {
        this.jPanel2 = jPanel2;
    }

    public JPanel getjPanel3() {
        return jPanel3;
    }

    public void setjPanel3(JPanel jPanel3) {
        this.jPanel3 = jPanel3;
    }

    public JPanel getjPanel4() {
        return jPanel4;
    }

    public void setjPanel4(JPanel jPanel4) {
        this.jPanel4 = jPanel4;
    }

    public JPanel getjPanel5() {
        return jPanel5;
    }

    public void setjPanel5(JPanel jPanel5) {
        this.jPanel5 = jPanel5;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JScrollPane getjScrollPane2() {
        return jScrollPane2;
    }

    public void setjScrollPane2(JScrollPane jScrollPane2) {
        this.jScrollPane2 = jScrollPane2;
    }

    public JScrollPane getjScrollPane3() {
        return jScrollPane3;
    }

    public void setjScrollPane3(JScrollPane jScrollPane3) {
        this.jScrollPane3 = jScrollPane3;
    }

    public JTable getjTable1() {
        return jTable1;
    }

    public void setjTable1(JTable jTable1) {
        this.jTable1 = jTable1;
    }

    public JTable getjTable3() {
        return jTable3;
    }

    public void setjTable3(JTable jTable3) {
        this.jTable3 = jTable3;
    }

    public JTable getjTable4() {
        return jTable4;
    }

    public void setjTable4(JTable jTable4) {
        this.jTable4 = jTable4;
    }

    public JLabel getLbGiaNhap() {
        return lbGiaNhap;
    }

    public void setLbGiaNhap(JLabel lbGiaNhap) {
        this.lbGiaNhap = lbGiaNhap;
    }

    public JLabel getLbMaPhieuNhap() {
        return lbMaPhieuNhap;
    }

    public void setLbMaPhieuNhap(JLabel lbMaPhieuNhap) {
        this.lbMaPhieuNhap = lbMaPhieuNhap;
    }

    public JLabel getLbMaSach() {
        return lbMaSach;
    }

    public void setLbMaSach(JLabel lbMaSach) {
        this.lbMaSach = lbMaSach;
    }

    public JLabel getLbNCC() {
        return lbNCC;
    }

    public void setLbNCC(JLabel lbNCC) {
        this.lbNCC = lbNCC;
    }

    public JLabel getLbNhanVienNhap() {
        return lbNhanVienNhap;
    }

    public void setLbNhanVienNhap(JLabel lbNhanVienNhap) {
        this.lbNhanVienNhap = lbNhanVienNhap;
    }

    public JLabel getLbSoLuong() {
        return lbSoLuong;
    }

    public void setLbSoLuong(JLabel lbSoLuong) {
        this.lbSoLuong = lbSoLuong;
    }

    public JLabel getLbTenSach() {
        return lbTenSach;
    }

    public void setLbTenSach(JLabel lbTenSach) {
        this.lbTenSach = lbTenSach;
    }

    public JLabel getLbThanhTien() {
        return lbThanhTien;
    }

    public void setLbThanhTien(JLabel lbThanhTien) {
        this.lbThanhTien = lbThanhTien;
    }

    public JLabel getLbTongTien() {
        return lbTongTien;
    }

    public void setLbTongTien(JLabel lbTongTien) {
        this.lbTongTien = lbTongTien;
    }

    public JTable getTableListThem() {
        return tableListThem;
    }

    public void setTableListThem(JTable tableListThem) {
        this.tableListThem = tableListThem;
    }

    public JTextField getTxfFind() {
        return txfFind;
    }

    public void setTxfFind(JTextField txfFind) {
        this.txfFind = txfFind;
    }

    public JTextField getTxfGiaNhap() {
        return txfGiaNhap;
    }

    public void setTxfGiaNhap(JTextField txfGiaNhap) {
        this.txfGiaNhap = txfGiaNhap;
    }

    public JTextField getTxfMaPhieuNhap() {
        return txfMaPhieuNhap;
    }

    public void setTxfMaPhieuNhap(JTextField txfMaPhieuNhap) {
        this.txfMaPhieuNhap = txfMaPhieuNhap;
    }

    public JTextField getTxfMaSach() {
        return txfMaSach;
    }

    public void setTxfMaSach(JTextField txfMaSach) {
        this.txfMaSach = txfMaSach;
    }

    public JTextField getTxfNhanVien() {
        return txfNhanVien;
    }

    public void setTxfNhanVien(JTextField txfNhanVien) {
        this.txfNhanVien = txfNhanVien;
    }

    public JTextField getTxfSoLuong() {
        return txfSoLuong;
    }

    public void setTxfSoLuong(JTextField txfSoLuong) {
        this.txfSoLuong = txfSoLuong;
    }

    public JTextField getTxfTenSach() {
        return txfTenSach;
    }

    public void setTxfTenSach(JTextField txfTenSach) {
        this.txfTenSach = txfTenSach;
    }
}

